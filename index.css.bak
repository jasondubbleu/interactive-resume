/* Global Styles */
/* FORCE-HIDE ANY ELEMENT WITH .hidden */
.hidden {
  display: none !important;
}

body {
  font-family: Arial, Helvetica, sans-serif;
  margin: 0;
  padding: 0;
  line-height: 1.6;
  background: linear-gradient(
    to bottom,
    #f0f0f0 0%,
    #000000 100%
  );
}

.content-wrapper {
  background-color: #ffffff;     /* pure white */
  border-radius: 12px;           /* round the corners */
  margin: 4rem auto 50rem auto; 
  padding: 0rem 2rem 2rem;               /* internal padding so content isn’t flush to edge */
  max-width: 900px;              /* constrain overall width (adjust as needed) */
  box-shadow: 0 4px 10px rgba(0,0,0,0.05); /* very soft drop shadow (optional) */
}

/* 1) Increase vertical padding on every section */
.section {
  /* was: padding: 4rem 2rem; */
  padding: 6rem 2rem;    /* now: 6rem top & bottom for more space */
  border-bottom: 1px solid #ccc;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

/* 2) Add extra bottom‐only space under the contact section */
#contact {
  /* Keep whatever padding is applied above, and add extra bottom padding */
  padding-bottom: 8rem;   /* adds 8rem of “floating” space below contact */
}

/* 3) (Optional) If you want an even bigger gap after the last section,
      you can also push the entire body down: */
body {
  /* was: margin: 0; padding: 0; */
  margin: 0;
  padding: 0 0 4rem 0;    /* add a 4rem bottom padding to the page */
}

/* Ensure section content doesn’t stretch too wide */
.section > * {
  width: 100%;
  max-width: 800px;
}

.section {
  /* existing padding (e.g. 6rem top/bottom) stays */
  padding: 3rem 2rem;
  /* add a big bottom margin so even the very last section can scroll up */
  margin-bottom: 6rem 2rem;
}

.site-title {
  font-size: 3rem;       /* make it much larger */
  font-weight: 700;      /* extra bold */
  margin-bottom: 1.5rem; /* add space below */
  color: #333;           /* a dark, crisp color */
}

.site-title {
  color: #007acc;
  font-size: 3rem;
  font-weight: 700;
  text-shadow: 1px 1px 3px rgba(0, 0, 0, .5); /* very light shadow */
}

/* Headings throughout the site */
.section h1,
.section h2 {
  margin-bottom: 4rem;
  font-weight: 600;
  color: #333;
}

/* Paragraphs in sections */
.section p {
  margin-bottom: 1.5rem;
  color: #555;
  line-height: 1.5;
}

/* Links inside paragraphs */
.section a {
  color: #007acc;
  text-decoration: none;
}


/*  Fade-in Utility Classes  */
/* Parent stays invisible until “visible” */
.fade-in-section {
  opacity: 0;
  transition: opacity 0.5s ease-out;
}

/* Once parent is visible, reveal children one after another */
.fade-in-section.is-visible {
  opacity: 1;
}

.fade-in-section .child {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.8s ease-out, transform 0.8s ease-out;
  will-change: opacity, transform;
}

/* Use nth-child(...) to stagger delays */
.fade-in-section.is-visible .child:nth-child(1) {
  opacity: 1;
  transform: translateY(0);
  transition-delay: 0.1s;
}
.fade-in-section.is-visible .child:nth-child(2) {
  opacity: 1;
  transform: translateY(0);
  transition-delay: 0.2s;
}
.fade-in-section.is-visible .child:nth-child(3) {
  opacity: 1;
  transform: translateY(0);
  transition-delay: 0.3s;
}
/* Add more nth-child selectors if you have more children */



/* --- Summary Section --- */
#summary .summary-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2rem;
  margin-top: 2rem;
}

@media (min-width: 768px) {
  #summary .summary-content {
    flex-direction: row;
    justify-content: center;
  }
}

.summary-text,
.summary-photo {
  width: 100%;
  max-width: 400px;
}

.summary-photo img {
  border-radius: 8px;
  max-width: 100%;
  height: auto;
}

/* --- EXPERIENCE SECTION ALIGNMENT TWEAKS --- */

/* 1) Keep the Experience section itself centered, but let its children stack left */
#experience {
  text-align: left;       /* ensure text inside is left-aligned */
  display: flex;
  flex-direction: column;
  align-items: center;    /* center the inner container */
}

/* 2) Constrain the inner wrapper to your existing max-width (e.g. 800px) */
#experience .inner {
  width: 100%;
  max-width: 800px;       /* match whatever max-width your other sections use */
}

/* 3) Experience heading sits left under that same container */
#experience .inner > h2 {
  margin: 0 0 1.5rem 0;    /* spacing below “Experience” */
  text-align: left;
}

/* 4) For the “Work” header, remove full-width and instead add a left indent */
.experience-header {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-start;  /* left-align everything in the header */
  gap: 0.5rem;                   /* small gap between items */
  padding: 0.5rem 0;
  /* add left padding so that this line starts under the company name */
  padding-left: 1rem;            /* tweak this to match your desired indent */
}

/* 5) Remove full-row rule for “Work”; now it sits at same indent */
.experience-header h3 {
  width: 100%;              /* do not force 100% width */
  margin: 0 1rem 0 0;            /* small right margin, no bottom margin */
  text-align: left;
}

/* 6) Keep the job title span + “+” button on the same line, also indented */
.experience-header span,
.experience-header .expand-btn {
  margin: 0;
}

/* 7) Align the Education block under the same left indent */
.experience-education {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  text-align: left;
  margin-top: 2rem;
  padding-left: 1rem;            /* same indent as .experience-header */
}

/* 8) Style the Education heading and paragraphs */
.experience-education h3 {
  margin: 0 0 0.5rem 0;
  text-align: left;
}

.experience-education p {
  margin: 0.25rem 0;
  line-height: 1.5;
  text-align: left;
}

/* ===============================
   Smooth expand/collapse styling
   =============================== */

/* Base state: collapsed */
.experience-details {
  overflow: hidden;                     /* hide anything beyond max-height */
  max-height: 0;                        /* start fully closed */
  transition: max-height 0.4s ease;     /* animate max-height changes */
}

/* Expanded state: we’ll allow enough max-height to show the content.
   500px is just an example—make sure it’s taller than your tallest list. */
.experience-details.expanded {
  max-height: 500px;                    /* large enough to show the full <ul> */
}

/* Optional: if you want to fade in the list items slightly as it expands */
.experience-details ul {
  opacity: 0;
  transition: opacity 0.2s ease 0.2s;    /* fade in after a brief delay */
  margin: 0;                             /* remove default spacing quirks */
  padding-left: 1.5rem;                 /* keep bullet indentation */
}

.experience-details.expanded ul {
  opacity: 1;
  transition-delay: 0.4s;                /* wait until after max-height finishes */
}


/* --- Skills Section --- */
#skills .skills-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2rem;
  margin-top: 2rem;
}

@media (min-width: 768px) {
  #skills .skills-content {
    flex-direction: row;
    justify-content: center;
  }
}

.skill-category {
  width: 100%;
  max-width: 300px;
}

.skill-category h3 {
  margin-bottom: 0.5rem;
  font-weight: 500;
  color: #333;
}

.skill-category ul {
  list-style-type: disc;
  padding-left: 1.5rem;
  color: #555;
}

/* --- Goals Section --- */
#goals .goals-content {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  margin-top: 2rem;
}

@media (min-width: 768px) {
  #goals .goals-content {
    flex-direction: row;
    justify-content: center;
  }
}

.goal-category {
  width: 100%;
  max-width: 350px;
}

.goal-category h3 {
  margin-bottom: 0.5rem;
  font-weight: 500;
  color: #333;
}

.goal-category p {
  color: #555;
  line-height: 1.5;
}

/* ===========================
   Updated HOBBIES Section CSS
   =========================== */

/* Base hobbies-row: stack by default (mobile-first) */
.hobbies-row {
  display: flex;
  flex-direction: column;       /* stack image and text on very narrow screens */
  align-items: center;          /* center‐align each item when stacked */
  gap: 1rem;                     /* spacing between image & text in each row */
  margin-top: 2rem;              /* space above each row */
}

/* Each image container: full width by default, with a max‐width */
.hobby-image-left img,
.hobby-image-right img {
  width: 100%;
  max-width: 400px;              /* make images bigger; adjust as desired */
  border-radius: 8px;
}

/* Each text container: full width by default, with a comfortable max‐width */
.hobbies-text-right,
.hobbies-text-left {
  width: 100%;
  max-width: 400px;
  color: #555;
  font-size: 1rem;
  line-height: 1.5;
  text-align: left;              /* left‐align the paragraph text */
}

/* --- On medium/large screens (side by side) --- */
@media (min-width: 768px) {
  .hobbies-row {
    flex-direction: row;         /* place image & text side by side */
    justify-content: center;     /* center the two‐column group within the container */
    align-items: center;         /* vertically align image & text */
  }

  /* In the top row, image is left and text is right */
  .hobbies-row:nth-child(2) .hobby-image-left,
  .hobbies-row:nth-child(2) .hobbies-text-right {
    /* nothing special—order is already image then text in HTML */
  }

  /* In the bottom row, we want text on left and image on right */
  .hobbies-row:nth-child(3) {
    flex-direction: row-reverse; /* reverse order so text is first, image second */
  }
}


/* --- Contact Section --- */

/* Force Contact to be a single, centered column */
#contact .contact-content {
  display: flex;
  flex-direction: column;
  align-items: center;  /* center the inner content */
  margin-top: 2rem;     /* keep your existing spacing */
}

/* If there’s any leftover two‐column rule, override it */
#contact .contact-content > div {
  width: auto;
  max-width: none;
}

#contact .contact-content {
  margin-top: 2rem;
}

.contact-info {
  max-width: 400px;
  text-align: center;
}

.contact-info p {
  margin: 0.5rem 0;
  color: #333;
}

.contact-info a {
  color: #007acc;
  text-decoration: none;
}

/* ================================================
   NAV DIAL CSS (fixed in bottom-right corner)
   ================================================ */

/* Position the nav-dial group at bottom-right */
.nav-dial {
  position: fixed;
  bottom: 124px;
  right: 124px;
  width: 120px;        /* Diameter of your dial */
  height: 120px;
  z-index: 20;         /* Sit above other content */
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none; /* Allow only children (links) to be clickable */
}

/* Constrain fade-in on the dial face itself */
.nav-dial.fade-in-section {
  /* (Your existing fade-in rules will apply) */
}
.dial-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: visible; /* ensure nothing is clipped */
}

.dial-face {
  position: relative;
  width: 100%;
  height: 100%;
  border: 3px solid #000000;
  border-radius: 50%;
  background-color: #000000;
  box-shadow: 0 2px 6px rgba(0,0,0,0.15);
  overflow: visible;       /* allow pointer/labels to overflow */
  transform: translateY(8px); /* NEW: move the entire circle + pointer down */
}

.dial-wrapper,
.dial-face {
  overflow: visible;
}


/* Centered Dial Pointer */
.dial-pointer {
  position: absolute;
  left: 50%;
  top: 50%;
  width: 4px;
  height: 45px;
  background-color: #FFFFFF;
  border-radius: 2px;
  transform-origin: 50% 100%;
  transform: translateX(-50%) translateY(-100%) rotate(-90deg);
  transition: transform 0.4s ease-out;
  z-index: 5;
}

/* STYLE EACH LABEL AROUND THE CIRCLE USING --angle */
.dial-label {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: 
    rotate(var(--angle)) 
    translate(0, -120px)               /* radial distance from center */
    rotate(calc(var(--angle) * -1))   /* keep text upright */
    translateX(-50%)                  /* center text horizontally */
    translateY(-16px);                 /* NEW: shove labels up by 8px */
  text-decoration: none;
  color: #000000;
  font-size: 1.25rem;
  font-weight: 500;
  white-space: nowrap;
  text-align: center;
  pointer-events: all;
}

/* Hover/focus can stay as-is or be tweaked if you like */
.dial-label:hover,
.dial-label:focus {
  color: #004a80;
  text-decoration: underline;
}

/* Active (selected) state: white text on black background */
.dial-label.active-label {
  color: #fff;               /* white text */
  background-color: #000;    /* black box */
  padding: 2px 4px;          /* same padding so the box size is consistent */
  border-radius: 4px;
}

/* ==============================
   DIAL TICKS (white lines inside)
   ============================== */
/* DIAL TICKS (rotated radial lines) */
.dial-tick {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 2px;                /* thickness of the tick */
  height: 10px;              /* length from center to inside circle edge */
  background-color: #fff;    /* white tick */
  
  /* Pivot around the top of the tick (so it “fans out” from center) */
  transform-origin: 50% 0%;
  
  /* 
    1) rotate(var(--angle)): spin the tick around the center.
    2) translateY(-60px): move its top up to the circle’s radius (60px).
       Adjust this “60px” if your dial diameter changes.
  */
  transform: rotate(var(--angle)) 
             translateY(-60px);
             
  z-index: 3; /* ensure ticks sit above the border, behind labels */
}

/* Make sure Hobbies and Contact have extra space below them */
#hobbies {	
  padding-bottom: 10rem; /* 10rem of space under Hobbies */
}
#contact {
  padding-bottom: 15vh;  /* push “Contact” up a full screen’s worth */
}


/* Container for the two buttons */
.download-buttons {
  display: flex;
  gap: 1rem;            /* space between buttons */
  margin-bottom: 0rem;  /* space below the buttons */
  padding-top: 1.5rem;
}

/* Style each “download” button */
.download-button {
  display: inline-block;
  padding: 0.5rem 1rem;
  border: 1px solid #ccc;   /* light-gray border */
  background-color: #fff;   /* white inside */
  color: #555;              /* gray text */
  text-decoration: none;
  border-radius: 4px;
  font-size: 0.9rem;
  transition: background-color 0.2s;
}

.download-button:hover {
  background-color: #f5f5f5; /* subtle hover shade */
}
